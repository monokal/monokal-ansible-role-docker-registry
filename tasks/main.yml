---

# Documentation:
# https://docs.docker.com/registry/deploying/
# https://docs.docker.com/registry/insecure/

# UFW

- name: ufw_allow
  ufw:
    rule:      allow
    port:      "{{ item.port }}"
    proto:     "{{ item.proto }}"
    direction: "{{ item.direction }}"
  with_items:
    # Inbound
    - { port: "{{ docker_registry_port }}", proto: 'tcp', direction: 'in'} # Docker Registry
  register: ufw_allow

# Packages

- name: install_packages
  apt:
    name:         "{{ item }}"
    update_cache: yes
  with_items:
    - "apache2-utils" # Required for htpasswd
  register: install_packages

# Directories

- name: create_directories
  file:
    path:  "/opt/docker_registry/{{ item }}"
    state: directory
    owner: root
    group: root
    mode:  "u=rwx,g=rx,o=x"
  with_items:
    - "certs"
    - "auth"
    - "data" # Created as local default but see "docker_registry_data_path" var.
  register: create_directories

# SSL certs

- name: generate_certs
  when: create_directories|success
  #command: "openssl req -newkey rsa:4096 -nodes -sha256 -subj '/C=GB/ST=South Yorkshire/L=Sheffield/O=Private Docker Registry/CN={{ ansible_fqdn }}' -keyout /opt/docker_registry/certs/{{ ansible_fqdn }}.key -x509 -days 365 -out /opt/docker_registry/certs/{{ ansible_fqdn }}.crt"
  command: "openssl req -newkey rsa:4096 -nodes -sha256 -subj '/C=GB/ST=South Yorkshire/L=Sheffield/O=Private Docker Registry/CN={{ ansible_fqdn }}' -keyout /opt/docker_registry/certs/domain.key -x509 -days 365 -out /opt/docker_registry/certs/domain.crt"
  args:
    creates: "/opt/docker_registry/certs/domain.crt"
  register: generate_certs

# Basic auth

- name: generate_htpasswd
  when: install_packages|success and create_directories|success
  shell: "htpasswd -Bbn {{ docker_registry_username }} {{ docker_registry_password }} > /opt/docker_registry/auth/htpasswd"
  args:
    creates: /opt/docker_registry/auth/htpasswd
  register: generate_htpasswd

# Registry container

- name: docker_start_registry
  when: generate_certs|success and generate_htpasswd|success
  docker:
    name:           registry
    image:          registry:2
    state:          started
    pull:           missing
    restart_policy: always
    net:            bridge
    ports:
        - "0.0.0.0:{{ docker_registry_port }}:5000"
    volumes:
        - "/opt/docker_registry/auth:/auth"
        - "/opt/docker_registry/certs:/certs"
        - "{{ docker_registry_data_path }}:/var/lib/registry"
    env:
        REGISTRY_HTTP_SECRET:          "{{ docker_registry_http_secret }}"
        REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/domain.crt"
        REGISTRY_HTTP_TLS_KEY:         "/certs/domain.key"
        REGISTRY_AUTH:                 "htpasswd"
        REGISTRY_AUTH_HTPASSWD_REALM:  "Registry Realm"
        REGISTRY_AUTH_HTPASSWD_PATH:   "/auth/htpasswd"
  register: docker_start_registry
